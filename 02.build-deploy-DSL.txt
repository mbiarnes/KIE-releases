def cloneScript_01 = 
"""
# clone CHESTNUT
git clone git@github.com:drooljbpm/drooljbpms-build-bootstrap.git
cd droolsjbpm-build-bootstrap
git checkout 6.4.x

"""

def cloneScript_02 =
"""
cd /home/jenkins/workspace/02.build-deploy-6.4.x
sh /home/jenkins/workspace/02.build-deploy-6.4.x/droolsjbpm-buil-bootstrap/script/release/02.KIE-releases_build-deploy.sh

"""
job("02.build-deploy-6.4.x") {

  description("This job: <br> - builds all repositories and deploys them locally ")
  
  parameters {
    choiceParam("TARGET", ["community", "productized"], "please select if this release is for community <b> community </b> or <br> if it is for building a productization tag <b>productized <br> ******************************************************** <br> ")
    stringParam("RELEASE_BRANCH", "r6.4.0.Final", "please edit the name of the release branch <br> i.e. typically <b> r6.4.0.Final </b> for <b> community </b>or <b> bsync-6.4.x-2016.07.30  </b> for <b> productization </b> <br> ******************************************************** <br> ")
  };
  
  label("kie-releases")

  jdk("jdk1.7") 
  
  wrappers {
    timestamps()
    colorizeOutput()
    preBuildCleanup()
    toolenv("APACHE_MAVEN_3_2_3", "JDK1_7")
  }  
  
 
  steps {
    environmentVariables {
        envs(MAVEN_OPTS :"-Xms2g -Xmx3g -XX:MaxPermSize=512m", MAVEN_HOME: "\$APACHE_MAVEN_3_2_3_HOME", MAVEN_REPO_LOCAL: "/home/jenkins/.m2/repository", PATH :"\$MAVEN_HOME/bin:\$PATH")
    }    
    shell(cloneScript_01)
    shell(cloneScript_02)
  }
}

nestedView("Releases") {
    views {
        listView("KIE-6.4.x") {
            jobs {
                name("02.build-deploy-6.4.x")
            }
            columns {
                status()
                weather()
                name()
                lastSuccess()
                lastFailure()
            }
        }
    }
}
