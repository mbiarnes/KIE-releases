def cloneScript_01 = 
"""
# clone CHESTNUT
git clone git@github.com:mbiarnes/KIE-releases.git
cd KIE-releases
git checkout 6.4.x

"""

def cloneScript_02 =
"""
cd /home/mbiarnes/.jenkins/workspace/03.copy-to-Nexus-6.4.x
sh /home/mbiarnes/.jenkins/workspace/03.copy-to-Nexus-6.4.x/KIE-releases/03.KIE-releases_copy-to-Nexus.sh

"""

def cloneScript_03 =
"""
cp -r /home/mbiarnes/.jenkins/workspace/03.copy-to-Nexus-6.4.x/KIE-releases/03a.KIE-releases_test-coverage-matrix.sh .
sh 03a.KIE-releases_test-coverage-matrix.sh
"""

job("03.copy-to-Nexus-6.4.x") {

  description("This job: <br> - builds all repositories and deploys them locally ")
  
  parameters {
    choiceParam("TARGET", ["community", "productized"], "please select if this release is for community <b> community </b> or <br> if it is for building a productization tag <b>productized <br> ******************************************************** <br> ")
  };
  
  jdk("jdk1.7") 
  
  wrappers {
    timestamps()
    colorizeOutput()
    preBuildCleanup()
  }  
  
 
  steps {
    environmentVariables {
        envs(MAVEN_OPTS :"-Xms2g -Xmx3g -XX:MaxPermSize=512m", MAVEN_HOME: "/usr/local/maven/apache-maven-3.2.3", MAVEN_REPO_LOCAL: "/home/mbiarnes/.m2/repository")
    }    
    shell(cloneScript_01)
    shell(cloneScript_02)
  }
  
  publishers {
    downstreamParameterized {
      trigger("03a.test-coverage-martix-6.4.x") {
        condition('UNSTABLE_OR_BETTER')
          parameters {
            currentBuild()
          }
        }
      }
    }  
}

matrixJob("03a.test-coverage-martix-6.4.x") {
  axes {
    jdk("jdk1.6", "jdk1.7", "jdk1.8")
  }
   
  wrappers {
    timestamps()
    colorizeOutput()
    preBuildCleanup()
  } 
  
  steps {
    shell (cloneScript_03)
  }

  publishers {
    archiveJunit("**/TEST-*.xml")
  }  
}

nestedView("Releases") {
    views {
        listView("KIE-6.4.x") {
            jobs {
                name("03.copy-to-Nexus-6.4.x")
                name("03a.test-coverage-martix-6.4.x")
            }
            columns {
                status()
                weather()
                name()
                lastSuccess()
                lastFailure()
            }
        }
    }
}
